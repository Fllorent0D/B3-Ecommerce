/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationmail;

import java.awt.Point;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author florentcardoen
 */
public class NewMailFrame extends javax.swing.JFrame {
    private MimeBodyPart pieceJointe;
    private PieceJointe pj;
    private Session ses;
    private String user;
    /**
     * Creates new form NewMailFrame
     */
    public NewMailFrame(Session s, String u) {
        initComponents();
        ses = s;
        user = u;
    }
    public NewMailFrame()
    {
        initComponents();
        //Permet de tester l'envoi d'un mail sans l'école
        user = "fcardoen@gmail.com";//change accordingly
        final String username = "fcardoen";//change accordingly
        final String password = "Coque Bouteille Lithographie";//change accordingly

        // Assuming you are sending email through relay.jangosmtp.net
        String host = "smtp.gmail.com";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "587");

        // Get the Session object.
        ses = Session.getInstance(props,
        new javax.mail.Authenticator() {
           protected PasswordAuthentication getPasswordAuthentication() {
              return new PasswordAuthentication(username, password);
           }
        });  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        toTextField = new javax.swing.JTextField();
        subjectTextField = new javax.swing.JTextField();
        ccTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentTextArea = new javax.swing.JTextArea();
        envoyerButton = new javax.swing.JButton();
        pieceButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        toTextField.setToolTipText("");

        ccTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccTextFieldActionPerformed(evt);
            }
        });

        contentTextArea.setColumns(20);
        contentTextArea.setRows(5);
        jScrollPane1.setViewportView(contentTextArea);

        envoyerButton.setText("Envoyer");
        envoyerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoyerButtonActionPerformed(evt);
            }
        });

        pieceButton.setText("Ajouter une pièce jointe");
        pieceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pieceButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("A :");

        jLabel2.setText("CC :");

        jLabel3.setText("Sujet :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(pieceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 381, Short.MAX_VALUE)
                        .addComponent(envoyerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toTextField)
                            .addComponent(subjectTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ccTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(envoyerButton)
                    .addComponent(pieceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ccTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccTextFieldActionPerformed

    private void envoyerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoyerButtonActionPerformed
        // TODO add your handling code here:
       
        if(subjectTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Votre mail ne contient pas de sujet.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        if(toTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Vous n'avez pas indiqué de destinataire.", "Error", JOptionPane.ERROR_MESSAGE);

        }
        

        MimeMessage messageComplet = new MimeMessage(ses);

        try 
        {
            messageComplet.setFrom(new InternetAddress(user));
            messageComplet.setRecipient(Message.RecipientType.TO, new InternetAddress(toTextField.getText()));
            if(ccTextField.getText().length() > 0)
                messageComplet.addRecipient(Message.RecipientType.CC, new InternetAddress(ccTextField.getText()));
            
            messageComplet.setSubject(subjectTextField.getText());
            messageComplet.setSentDate(new Date());
            
            Multipart contenu = new MimeMultipart();
            
            MimeBodyPart corpsMessage = new MimeBodyPart();
            corpsMessage.setText(contentTextArea.getText());
            contenu.addBodyPart(corpsMessage);
            
            
            if(pj.getBodyPart() != null){
                contenu.addBodyPart(pj.getBodyPart());
                messageComplet.addHeader("X-FlocaDigest", pj.getDigest().toString());
            }
            
            messageComplet.setContent(contenu);
            Transport.send(messageComplet);
            
            this.dispose();
            JOptionPane.showMessageDialog(this, "Votre mail a bien été envoyé", "Mail", JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch (MessagingException ex) 
        {
            JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de l'envoie de votre mail." + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(NewMailFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_envoyerButtonActionPerformed

    private void pieceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pieceButtonActionPerformed
        // TODO add your handling code here:
        
        if(pieceButton.getText().equalsIgnoreCase("Ajouter une pièce jointe"))
        {
            JFileChooser jfc = new JFileChooser();
            jfc.showDialog(this, "OK");

            if(jfc.getSelectedFile() == null)
                return;

            String filePath = jfc.getSelectedFile().getAbsolutePath();
            pj = new PieceJointe();
            try {
                pj.setPieceJointe(filePath);
                pieceButton.setText("Supprimer pièce jointe");

            } catch (MessagingException ex) {
                JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de l'ajout de votre piece jointe.", "Error", JOptionPane.ERROR_MESSAGE);

                Logger.getLogger(NewMailFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Changement bouton
            
            return;
        }
        
        pieceJointe = null;
        pieceButton.setText("Ajouter une pièce jointe");
    }//GEN-LAST:event_pieceButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(!toTextField.getText().isEmpty() || !ccTextField.getText().isEmpty() || !subjectTextField.getText().isEmpty() || !contentTextArea.getText().isEmpty())
        {
            int dialogResult = JOptionPane.showConfirmDialog (null, "Etes-vous certain de vouloir quitter votre email?","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                this.dispose();
            }
            else
                return;
        }
        else
            this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    System.setProperty("apple.laf.useScreenMenuBar", "true");
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                NewMailFrame mainFrame = new NewMailFrame();
                mainFrame.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ccTextField;
    private javax.swing.JTextArea contentTextArea;
    private javax.swing.JButton envoyerButton;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pieceButton;
    private javax.swing.JTextField subjectTextField;
    private javax.swing.JTextField toTextField;
    // End of variables declaration//GEN-END:variables
}
